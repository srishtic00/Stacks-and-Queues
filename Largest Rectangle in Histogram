int Solution::largestRectangleArea(vector<int> &A) {
    stack<int> s; 
  
    int max_area = 0; 
    int tp; 
    int currarea; 
    int i = 0; 
    while (i < A.size()) 
    { 
        
        if (s.empty() || A[s.top()] <= A[i]) 
            s.push(i++); 
  
        
        else
        { 
            tp = s.top(); 
            s.pop();
  
            currarea = A[tp] * (s.empty() ? i :  i - s.top() - 1); 
  
           
            if (max_area < currarea) 
                max_area = currarea; 
        } 
    } 
  
     
   
    while (s.empty() == false) 
    { 
        tp = s.top(); 
        s.pop(); 
        currarea = A[tp] * (s.empty() ? i :  i - s.top() - 1); 
  
        if (max_area < currarea) 
            max_area = currarea; 
    } 
  
    return max_area; 
}
